import disnake
from disnake.ext import commands
from difflib import SequenceMatcher

intents = disnake.Intents.default()
intents.messages = True
intents.guilds = True
intents.members = True
intents.bans = True
intents.message_content = True
intents.presences = True
intents.voice_states = True

bot = commands.Bot(command_prefix='!', intents=intents)
previous_channels = {}
spam_count = {}
whitelist = [] #–ø–æ–º–µ—Å—Ç–∏—Ç–µ –∞–π–¥–∏ –¥–ª—è –≤–∞–π—Ç–ª–∏—Å—Ç–∞


def similar(a, b):
    return SequenceMatcher(None, a, b).ratio()


log_channel_id = 1325892292581789817
log_channel = None


def get_log_channel():
    global log_channel
    if log_channel is None:
        log_channel = bot.get_channel(log_channel_id)
    return log_channel


@bot.event
async def on_member_ban(guild: disnake.Guild, user: disnake.User):
    channel = get_log_channel()
    if channel:
        async for entry in guild.audit_logs(limit=1, action=disnake.AuditLogAction.ban):
            responsible_user = entry.user

            if responsible_user.id not in whitelist:
                embed = disnake.Embed(
                    title=f"üõë –£—á–∞—Å—Ç–Ω–∏–∫ **{user}** –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω",
                    description=f"–ó–∞–±–∞–Ω–∏–ª: **{responsible_user}**",
                    color=disnake.Color.red()
                )
                embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –≤–∞–π—Ç –ª–∏—Å—Ç–µ –∏ –æ–Ω –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!", value="", inline=False)
                await guild.ban(user, reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–Ω–æ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞")
                await channel.send(embed=embed)
            else:
                embed = disnake.Embed(
                    title=f"üõ°Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ **{user}** –±—ã–ª –∫–∏–∫–Ω—É—Ç",
                    description=f"–ö–∏–∫–Ω—É–ª: **{responsible_user}**",
                    color=disnake.Color.green()
                )
                await channel.send(embed=embed)


@bot.event
async def on_member_remove(member: disnake.Member):
    channel = get_log_channel()
    if channel:
        async for entry in member.guild.audit_logs(limit=1, action=disnake.AuditLogAction.kick):
            if entry.target.id == member.id:
                kicker = entry.user
                if kicker.id not in whitelist:
                    embed = disnake.Embed(
                        title=f"üõë –£—á–∞—Å—Ç–Ω–∏–∫ **{member}** –±—ã–ª –∫–∏–∫–Ω—É—Ç",
                        description=f"–ö–∏–∫–Ω—É–ª: **{kicker}**",
                        color=disnake.Color.red()
                    )
                    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –≤–∞–π—Ç –ª–∏—Å—Ç–µ –∏ –æ–Ω –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!", value="", inline=False)
                    await kicker.ban(reason="–ö–∏–∫–Ω—É–ª —É—á–∞—Å—Ç–Ω–∏–∫–∞, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.")
                    await channel.send(embed=embed)
                else:
                    embed = disnake.Embed(
                        title=f"üõ°Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ **{member}** –±—ã–ª –∫–∏–∫–Ω—É—Ç",
                        description=f"–ö–∏–∫–Ω—É–ª: **{kicker}**",
                        color=disnake.Color.green()
                    )
                    await channel.send(embed=embed)


@bot.event
async def on_guild_role_update(before: disnake.Role, after: disnake.Role):
    async for entry in after.guild.audit_logs(limit=1, action=disnake.AuditLogAction.role_update):
        if entry.target.id == after.id:
            changer = entry.user
            permissions_changed = []
            for perm in disnake.Permissions.VALID_FLAGS:
                before_perm = getattr(before.permissions, perm)
                after_perm = getattr(after.permissions, perm)
                if before_perm != after_perm:
                    change = f"{'‚úÖ' if after_perm else '‚ùå'} {perm}"
                    permissions_changed.append(change)

            if permissions_changed:
                if changer.id not in whitelist:
                    embed = disnake.Embed(
                        title=f"üõë –†–æ–ª—å **{after.name}** –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞",
                        description=f"–ò–∑–º–µ–Ω–∏–ª: **{changer}**",
                        color=disnake.Color.red()
                    )
                    embed.add_field(name="–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞:", value="\n".join(permissions_changed), inline=False)
                    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –≤–∞–π—Ç –ª–∏—Å—Ç–µ –∏ –æ–Ω –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!", value="", inline=False)
                    channel = get_log_channel()
                    await channel.send(embed=embed)
                    await changer.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–Ω–æ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞!")
                else:
                    embed = disnake.Embed(
                        title=f"üõ°Ô∏è –†–æ–ª—å **{after.name}** –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞",
                        description=f"–ò–∑–º–µ–Ω–∏–ª: **{changer}**",
                        color=disnake.Color.green()
                    )
                    embed.add_field(name="–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞:", value="\n".join(permissions_changed), inline=False)

                    channel = get_log_channel()
                    await channel.send(embed=embed)
            break


@bot.event
async def on_guild_channel_create(channel: disnake.abc.GuildChannel):
    log_channel = get_log_channel()
    async for entry in channel.guild.audit_logs(limit=1, action=disnake.AuditLogAction.channel_create):
        if entry.user.id not in whitelist:
            embed = disnake.Embed(
                title=f"üõë –ë—ã–ª —Å–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª **{channel.name}**",
                description=f"–°–æ–∑–¥–∞—Ç–µ–ª—å: **{entry.user}**",
                color=disnake.Color.red()
            )
            embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –≤ –≤–∞–π—Ç-–ª–∏—Å—Ç–µ, –æ–Ω –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω, –∞ –∫–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω!", value="", inline=False)
            await log_channel.send(embed=embed)
            await channel.delete(reason="–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
            await entry.user.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–Ω–æ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞!")
        else:
            embed = disnake.Embed(
                title=f"üõ°Ô∏è –ë—ã–ª —Å–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª **{channel.name}**",
                description=f"–°–æ–∑–¥–∞—Ç–µ–ª—å: **{entry.user}**",
                color=disnake.Color.green()
            )
            await log_channel.send(embed=embed)


@bot.event
async def on_message(message: disnake.Message):
    if message.author.bot or message.author.id in whitelist:
        return

    channel = get_log_channel()
    banned_words = ["http", "https", ".com", ".gg", ".ru", ".net", ".fun"]
    content = message.content.lower()

    for word in banned_words:
        if word in content:
            muted_role = disnake.utils.get(message.guild.roles, name="Muted")
            if not muted_role:
                muted_role = await message.guild.create_role(name="Muted")
                for ch in message.guild.channels:
                    await ch.set_permissions(muted_role, send_messages=False)

            await message.author.add_roles(muted_role)
            embed = disnake.Embed(
                title=f"üõ°Ô∏è **{message.author}** –±—ã–ª –∑–∞–º—É—á–µ–Ω –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫",
                description=f"–°–æ–æ–±—â–µ–Ω–∏–µ: `{message.content}`",
                color=disnake.Color.red()
            )
            await channel.send(embed=embed)
            await message.delete()
            break

    await bot.process_commands(message)

@bot.event
async def on_member_update(before, after):
    channel = get_log_channel()
    added_roles = set(after.roles) - set(before.roles)
    for role in added_roles:
        if role.permissions.administrator:

            if channel:
                async for entry in after.guild.audit_logs(limit=1, action=disnake.AuditLogAction.member_role_update):
                    if entry.target.id == after.id:
                        admin_issuer = entry.user
                        if admin_issuer.id not in whitelist:
                            embed = disnake.Embed(
                                title="üîî –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–π —Ä–æ–ª–∏",
                                description=(
                                    f"**–†–æ–ª—å –≤—ã–¥–∞–Ω–∞:** {role.mention}\n"
                                    f"**–í—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:** {after.mention} (ID: {after.id})\n"
                                    f"**–í—ã–¥–∞–ª —Ä–æ–ª—å:** {admin_issuer.mention} (ID: {admin_issuer.id})"
                                ),
                                color=disnake.Color.red()
                            )
                            embed.add_field(
                                name="‚ö†Ô∏è –î–µ–π—Å—Ç–≤–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ",
                                value=(
                                    f"**{admin_issuer.mention}** –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, "
                                    f"–ø–æ—ç—Ç–æ–º—É –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã."
                                ),
                                inline=False
                            )
                            await channel.send(embed=embed)
                            await after.remove_roles(role)
                            await admin_issuer.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω—Å–∫—É—é —Ä–æ–ª—å –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.")
                        else:
                            embed = disnake.Embed(
                                title="üõ°Ô∏è –†–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞",
                                description=(
                                    f"**–†–æ–ª—å –≤—ã–¥–∞–Ω–∞:** {role.mention}\n"
                                    f"**–í—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:** {after.mention} (ID: {after.id})\n"
                                    f"**–í—ã–¥–∞–ª —Ä–æ–ª—å:** {admin_issuer.mention} (ID: {admin_issuer.id})"
                                ),
                                color=disnake.Color.green()
                            )
                            embed.add_field(
                                name="‚úÖ –î–µ–π—Å—Ç–≤–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ",
                                value=f"**{admin_issuer.mention}** –≤—ã–¥–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫—É—é —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é **{after.mention}**.",
                                inline=False
                            )
                            await channel.send(embed=embed)
@bot.event
async def on_message(message):
    banned_words = ["http", "https", ".com", ",com", ",gg", ".gg", ".ru", "ru", ".net", ",net", "gg/", "gg /", ".fun", ",fun"]
    if any(word in message.content.lower() for word in banned_words):
        embed = disnake.Embed(
            title=f"üõë **{message.author}** –±—ã–ª –∑–∞–º—É—á–µ–Ω –∑–∞ —Å–ø–∞–º-—Å—Å—ã–ª–∫–∏",
            description=f"–°–æ–æ–±—â–µ–Ω–∏–µ: `{message.content}`",
            color=disnake.Color.red()
        )
        await channel.send(embed=embed)
        await message.delete()
        await message.author.ban(reason="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.")
    await bot.process_commands(message)
@bot.event
async def on_message(message):
    author_id = message.author.id
    if author_id in whitelist:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π
    if author_id not in spam_count:
        spam_count[author_id] = {'count': 1, 'last_message': message.content}
    else:
        similarity = similar(message.content, spam_count[author_id]['last_message'])
        if similarity >= 0.75:
            spam_count[author_id]['count'] += 1
            if spam_count[author_id]['count'] > 2:
                # –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ—Ö–æ–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                embed = disnake.Embed(
                    title=f"üõë **{message.author}** –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ —Å–ø–∞–º",
                    description=f"–°–æ–æ–±—â–µ–Ω–∏–µ: `{message.content}`",
                    color=disnake.Color.red()
                )
                await channel.send(embed=embed)
                await message.author.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∞–º–∞.")
                spam_count[author_id]['count'] = 0  # –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫
        else:
            spam_count[author_id] = {'count': 1, 'last_message': message.content}

    await bot.process_commands(message)
@bot.event
async def on_guild_role_create(role):
    channel = get_log_channel()
    if channel:
        async for entry in role.guild.audit_logs(limit=1, action=disnake.AuditLogAction.role_create):
            user = entry.user
            if user.guild_permissions.manage_roles:
                if user.id not in whitelist:
                    embed = disnake.Embed(
                        title=f"üõë –†–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **{role.name}** –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞",
                        description=f"–°–æ–∑–¥–∞–ª: {user.mention} (ID: {user.id})",
                        color=disnake.Color.red()
                    )
                    await channel.send(embed=embed)
                    await user.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ä–æ–ª—å —Å –∞–¥–º–∏–Ω—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.")
                else:
                    embed = disnake.Embed(
                        title=f"üõ°Ô∏è –†–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ **{role.name}** –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞",
                        description=f"–°–æ–∑–¥–∞–ª: {user.mention} (ID: {user.id})",
                        color=disnake.Color.green()
                    )
                    await channel.send(embed=embed)
@bot.event
async def on_guild_channel_create(channel):
    channel1 = get_log_channel()
    if channel.guild:
        async for entry in channel.guild.audit_logs(limit=1, action=disnake.AuditLogAction.channel_create):
            if entry.user.id not in whitelist:
                embed = disnake.Embed(
                    title=f"üõë –ö–∞–Ω–∞–ª **{channel.name}** –±—ã–ª —Å–æ–∑–¥–∞–Ω",
                    description=f"–°–æ–∑–¥–∞–ª: {entry.user.mention} (ID: {entry.user.id})",
                    color=disnake.Color.red()
                )
                embed.add_field(
                    name="‚ö†Ô∏è –î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ",
                    value=f"–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.",
                    inline=False
                )
                await channel1.send(embed=embed)
                await channel.delete(reason="–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
                await entry.user.ban(reason="–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.")
            else:
                embed = disnake.Embed(
                    title=f"üõ°Ô∏è –ö–∞–Ω–∞–ª **{channel.name}** –±—ã–ª —Å–æ–∑–¥–∞–Ω",
                    description=f"–°–æ–∑–¥–∞–ª: {entry.user.mention} (ID: {entry.user.id})",
                    color=disnake.Color.green()
                )
                await channel1.send(embed=embed)
@bot.event
async def on_member_join(member):
    if member.bot:
        embed = disnake.Embed(
            title=f"üõë **{member}** –±—ã–ª —É–¥–∞–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –±–æ—Ç",
            description=f"–ë–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω: {member.mention} (ID: {member.id})",
            color=disnake.Color.red()
        )
        await member.guild.system_channel.send(embed=embed)
        await member.kick(reason="–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.")

@bot.event
async def on_webhooks_update(channel):
    webhooks = await channel.webhooks()
    for webhook in webhooks:
        if webhook.user.id not in whitelist:
            log_channel = get_log_channel()
            embed = disnake.Embed(
                title="üö® –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±—Ö—É–∫–∞!",
                description=f"–í–µ–±—Ö—É–∫ **{webhook.name}** –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ **{channel.name}**.\n"
                            f"–°–æ–∑–¥–∞—Ç–µ–ª—å: **{webhook.user.mention}** (ID: {webhook.user.id})",
                color=disnake.Color.red()
            )
            await log_channel.send(embed=embed)

            await webhook.delete(reason="–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
            await webhook.user.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –≤–µ–±—Ö—É–∫!")

deleted_channels = {}

@bot.event
async def on_guild_channel_delete(channel):
    user_id = None
    async for entry in channel.guild.audit_logs(limit=1, action=disnake.AuditLogAction.channel_delete):
        user = entry.user
        user_id = user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ
        if user_id not in whitelist:
            # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
            log_channel = get_log_channel()
            embed = disnake.Embed(
                title="üö® –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞!",
                description=f"–ö–∞–Ω–∞–ª **{channel.name}** –±—ã–ª —É–¥–∞–ª—ë–Ω.\n"
                            f"–£–¥–∞–ª–∏–ª: **{user.mention}** (ID: {user.id})",
                color=disnake.Color.red()
            )
            await log_channel.send(embed=embed)

            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª
            await channel.guild.create_text_channel(
                name=channel.name,
                category=channel.category,
                overwrites=channel.overwrites
            )
            await user.ban(reason="–ü–æ–ø—ã—Ç–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤!")
        break

@bot.event
async def on_guild_channel_delete(channel):
    async for entry in channel.guild.audit_logs(limit=1, action=disnake.AuditLogAction.channel_delete):
        user = entry.user

        if user.id not in whitelist:
            log_channel = get_log_channel()
            embed = disnake.Embed(
                title="üö® –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞!",
                description=f"–ö–∞–Ω–∞–ª **{channel.name}** –±—ã–ª —É–¥–∞–ª—ë–Ω.\n"
                            f"–£–¥–∞–ª–∏–ª: **{user.mention}** (ID: {user.id})",
                color=disnake.Color.red()
            )
            await log_channel.send(embed=embed)

            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª
            new_channel = await channel.guild.create_text_channel(
                name=channel.name,
                category=channel.category,
                overwrites=channel.overwrites
            )
            await log_channel.send(f"–ö–∞–Ω–∞–ª **{new_channel.name}** –±—ã–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            await user.ban(reason="–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!")
        break
@bot.event
async def on_message(message):
    if message.author.bot:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É
    if message.reference:
        await message.delete()

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        log_channel = disnake.utils.get(message.guild.text_channels, name="–ª–æ–≥")
        if log_channel:
            embed = disnake.Embed(
                title="üö® –ó–∞–ø—Ä–µ—â—ë–Ω–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è",
                description=(
                    f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {message.author.mention} (ID: {message.author.id})\n"
                    f"**–ö–∞–Ω–∞–ª:** {message.channel.mention}\n"
                    "–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
                ),
                color=disnake.Color.red()
            )
            await log_channel.send(embed=embed)

        # –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await message.author.ban(reason="–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–æ–∫, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º–∏")
        except disnake.Forbidden:
            if log_channel:
                await log_channel.send(
                    embed=disnake.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞",
                        description=(
                            f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.mention} "
                            f"(–≤–æ–∑–º–æ–∂–Ω–æ, —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤)."
                        ),
                        color=disnake.Color.red()
                    )
                )

    await bot.process_commands(message)  # –ù–µ –∑–∞–±—ã–≤–∞–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
@bot.event
async def on_ready():
    log_channel = disnake.utils.get(bot.get_all_channels(), name="–ª–æ–≥")  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤
    if log_channel:
        embed = disnake.Embed(
            title="üîß –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞",
            description="–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:",
            color=disnake.Color.green()
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
        commands_list = "\n".join([f"`/{cmd.name}` - {cmd.description or '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}" for cmd in bot.commands])
        embed.add_field(name="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", value=commands_list if commands_list else "–ù–µ—Ç –∫–æ–º–∞–Ω–¥.", inline=False)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
        events_list = [name for name in dir(bot) if name.startswith("on_")]
        events_list = "\n".join([f"`{event}`" for event in events_list])
        embed.add_field(name="–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π", value=events_list if events_list else "–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π.", inline=False)

        await log_channel.send(embed=embed)

    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}.")  # –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
@bot.event
async def on_message(message):
    if message.author.bot:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤

    # –§–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
    blocked_links = ["discord.com/invite", "discord.gg", "discordapp.com/invite"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    if any(link in message.content for link in blocked_links):
        if message.author.id not in whitelist:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ
            log_channel = bot.get_channel(log_channel_id)  # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤

            try:
                await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.author.ban(reason="–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")  # –ë–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                
                # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –ª–æ–≥–æ–≤
                embed = disnake.Embed(
                    title="üö® –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–æ–π",
                    description=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.mention} –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.",
                    color=disnake.Color.red(),
                )
                embed.add_field(name="–°–ø–∞–º–µ—Ä:", value=f"{message.author} (ID: {message.author.id})", inline=False)
                embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ:", value=message.content, inline=False)
                embed.add_field(name="–ö–∞–Ω–∞–ª:", value=message.channel.mention, inline=True)
                embed.set_footer(text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª.")

                if log_channel:
                    await log_channel.send(embed=embed)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥
            except disnake.Forbidden:
                print("–ë–æ—Ç—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                if log_channel:
                    await log_channel.send(
                        f"‚ö†Ô∏è –ë–æ—Ç –Ω–µ —Å–º–æ–≥ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.mention} –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—Ä–∞–≤."
                    )
            except disnake.HTTPException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –±–∞–Ω–∞: {e}")
                if log_channel:
                    await log_channel.send(
                        f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.mention}: {e}"
                    )

    await bot.process_commands(message)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

bot.run("")
